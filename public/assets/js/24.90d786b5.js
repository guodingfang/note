(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{245:function(v,a,_){v.exports=_.p+"assets/img/regex1.1d4fcc4f.png"},378:function(v,a,_){"use strict";_.r(a);var e=_(0),t=Object(e.a)({},(function(){var v=this,a=v.$createElement,e=v._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"表达式的拆分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#表达式的拆分","aria-hidden":"true"}},[v._v("#")]),v._v(" 表达式的拆分")]),v._v(" "),e("h2",{attrs:{id:"结构和操作符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结构和操作符","aria-hidden":"true"}},[v._v("#")]),v._v(" 结构和操作符")]),v._v(" "),e("p",[v._v("编程语言一般都有操作符。只要有操作符，就会出现一些问题。当一大堆操作符在一起，先操作谁，后操作谁？了不产生歧义，就需要语言本身定义好操作顺序，即所谓的优先级。")]),v._v(" "),e("p",[v._v("而在正则表达式\b中，操作符都体现在结构中，即由特殊字符和普通字符所代表的一个个特殊整体。")]),v._v(" "),e("blockquote",[e("p",[v._v("JS正则表达式中，都有那些结构呢？")]),v._v(" "),e("p",[v._v("字符字面量、字符组、量词、锚字符、分组、选择分支、反向引用。")])]),v._v(" "),e("h2",{attrs:{id:"具体含义简要"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#具体含义简要","aria-hidden":"true"}},[v._v("#")]),v._v(" 具体含义简要")]),v._v(" "),e("ul",[e("li",[v._v('字面量：匹配一个具体字符，包括不用转义的和需要转义的。比如 a 匹配字符 "a"，又比如 '),e("code",[v._v("\\n")]),v._v(" 匹配换行符，又比如 "),e("code",[v._v("\\.")]),v._v(" 匹配小数点。")]),v._v(" "),e("li",[v._v("字符组：匹配一个字符，可以是多种可能之一，比如 "),e("code",[v._v("[0-9]")]),v._v("，表示匹配一个数字。也有 "),e("code",[v._v("\\d")]),v._v(" 的简写形式。另外还有转义字符组，表示可以是除特定字符之外任何一个字符，比如 "),e("code",[v._v("[^0-9]")]),v._v("，表示一个非数字字符，也有 "),e("code",[v._v("\\D")]),v._v(" 的简写形式。")]),v._v(" "),e("li",[v._v("量词：表示一个字符连续出现，比如 "),e("code",[v._v("a{1,3}")]),v._v(' 表示 "a" 字符连续出现3次。另外还有常见的简写形式，比如 '),e("code",[v._v("a+")]),v._v(' 表示 "a" 字符连续出现至少一次。')]),v._v(" "),e("li",[v._v("锚点：匹配一个位置，而不是字符。比如 "),e("code",[v._v("^")]),v._v(" 匹配字符串的开头，又比如 "),e("code",[v._v("\\b")]),v._v(" 匹配单词边界，又比如 "),e("code",[v._v("(?=\\d)")]),v._v(" 表示数字前面的位置。")]),v._v(" "),e("li",[v._v("分组：括号表示一个整体，比如 "),e("code",[v._v("(ab)+")]),v._v('，表示 "ab" 两个字符连续出现多次，也可以使用非捕获分组 '),e("code",[v._v("(?:ab)+")]),v._v("。")]),v._v(" "),e("li",[v._v("分支：多个子表达式多选一，比如 "),e("code",[v._v("abc|bcd")]),v._v('，表达式匹配 "abc" 或 "bcd" 字符子串。')]),v._v(" "),e("li",[v._v("反向引用：比如 "),e("code",[v._v("\\2")]),v._v("，表示引用第2个分组。")])]),v._v(" "),e("h2",{attrs:{id:"涉及到的操作符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#涉及到的操作符","aria-hidden":"true"}},[v._v("#")]),v._v(" 涉及到的操作符")]),v._v(" "),e("ul",[e("li",[v._v("转义符 "),e("code",[v._v("\\")])]),v._v(" "),e("li",[v._v("括号和方括号 "),e("code",[v._v("(...)")]),v._v("，"),e("code",[v._v("(?...)")]),v._v("，"),e("code",[v._v("(?=...)")]),v._v("，"),e("code",[v._v("(?!...)")]),v._v("，"),e("code",[v._v("[...]")])]),v._v(" "),e("li",[v._v("量词限定符 "),e("code",[v._v("{m}")]),v._v("，"),e("code",[v._v("{m,n}")]),v._v("，"),e("code",[v._v("{m,}")]),v._v("，"),e("code",[v._v("?")]),v._v("，"),e("code",[v._v("*")]),v._v("，"),e("code",[v._v("+")])]),v._v(" "),e("li",[v._v("位置和顺序 "),e("code",[v._v("^")]),v._v("，"),e("code",[v._v("$")]),v._v("，"),e("code",[v._v("\\元字符")]),v._v("，一般字符")]),v._v(" "),e("li",[v._v("管道符 (竖杆) |")])]),v._v(" "),e("p",[v._v("分析一个正则表达式：")]),v._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[v._v('/**\n* 由于括号的存在，所以，(c|de*)是一个整体结构。\n* 在(c|de*)中，注意其中的量词*，因此e*是一个整体结构。\n* 又因为分支结构"|"优先级最低，因此c是一个整体，而de*是另一个整体。\n* 同理，整个正则分成了a、b?、()+、f、g。而又由于分支的原因，又可以分成ab?(c|de*)+和fg这两部分。\n*/')]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" regex "),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[v._v("/ab?(c|de*)+|fg/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])])]),e("h2",{attrs:{id:"匹配字符串整体问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#匹配字符串整体问题","aria-hidden":"true"}},[v._v("#")]),v._v(" 匹配字符串整体问题")]),v._v(" "),e("p",[v._v("因为是要匹配整个字符串，经常会在正则前后中加上锚字符串 "),e("code",[v._v("^")]),v._v(" 和 "),e("code",[v._v("$")]),v._v("。")]),v._v(" "),e("p",[v._v("比如要匹配目标字符串 'abc' 或者 'bcd' 时，如果一不小心，就会写成 "),e("code",[v._v("/^abc|bcd$/")]),v._v("。")]),v._v(" "),e("p",[v._v("而位置字符和字符序列优先级要比竖杠高，故其匹配的结构是：")]),v._v(" "),e("p",[e("img",{attrs:{src:_(245),alt:"regex"}})]),v._v(" "),e("p",[v._v("应该修改成：")]),v._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" regex "),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[v._v("/^(abc|bcd)$/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])])]),e("h2",{attrs:{id:"量词连缀问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#量词连缀问题","aria-hidden":"true"}},[v._v("#")]),v._v(" 量词连缀问题")]),v._v(" "),e("p",[v._v("假设，要匹配这样的字符串：")]),v._v(" "),e("ul",[e("li",[v._v("每个字符为a、b、c任选其一")]),v._v(" "),e("li",[v._v("字符串的长度是3的倍数")])]),v._v(" "),e("p",[v._v("此时正则不能写成 "),e("code",[v._v("/^[abc]{3}+$/")]),v._v("，这样会报错，说+前面没什么可重复的。")]),v._v(" "),e("p",[v._v("此时要修改成：")]),v._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" regex "),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[v._v("/^([abc]{3})+$/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])])])])}),[],!1,null,null,null);a.default=t.exports}}]);